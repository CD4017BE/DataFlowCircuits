blocks(
 in(
  name 'Signal input'
  type 'io'
  model 'in'
  out('signal')
  arg('name')
 )
 out(
  name 'Signal output'
  type 'io'
  model 'out'
  in('signal')
  arg('name')
 )
 type(
  name 'Get type'
  type 'typeop'
  model 'type'
  in('x')
  out('type(x)')
 )
 cast(
  name 'Typecast'
  type 'typeop'
  model 'cast'
  in('t' 'v')
  out('v as t')
 )
 add(
  name 'Addition'
  type 'typeop'
  model 'add'
  in('x' 'y')
  out('x + y')
 )
 sub(
  name 'Subtraction'
  type 'typeop'
  model 'sub'
  in('x' 'y')
  out('x - y')
 )
 mul(
  name 'Multiplication'
  type 'typeop'
  model 'mul'
  in('x' 'y')
  out('x * y')
 )
 div(
  name 'Division'
  type 'typeop'
  model 'div'
  in('x' 'y')
  out('x / y')
 )
 mod(
  name 'Modulo'
  type 'typeop'
  model 'mod'
  in('x' 'y')
  out('x mod y')
 )
 neg(
  name 'Negation'
  type 'typeop'
  model 'neg'
  in('x')
  out('-x')
 )
 and(
  name 'AND-Gate'
  type 'typeop'
  model 'and'
  in('x' 'y')
  out('x and y')
 )
 or(
  name 'OR-Gate'
  type 'typeop'
  model 'or'
  in('x' 'y')
  out('x or y')
 )
 xor(
  name 'XOR-Gate'
  type 'typeop'
  model 'xor'
  in('x' 'y')
  out('x xor y')
 )
 not(
  name 'NOT-Gate'
  type 'typeop'
  model 'not'
  in('x')
  out('not x')
 )
 eq(
  name 'Compare equal'
  type 'typeop'
  model 'eq'
  in('x' 'y')
  out('x = y')
 )
 ne(
  name 'Compare not equal'
  type 'typeop'
  model 'ne'
  in('x' 'y')
  out('x /= y')
 )
 lt(
  name 'Compare less than'
  type 'typeop'
  model 'lt'
  in('x' 'y')
  out('x < y')
 )
 ge(
  name 'Compare greater or equal'
  type 'typeop'
  model 'ge'
  in('x' 'y')
  out('x >= y')
 )
 len(
  name 'Element count'
  type 'typeop'
  model 'len'
  in('x')
  out('count(x)')
 )
 get(
  name 'Get element'
  type 'typeop'
  model 'get'
  in('x' 'i')
  out('x[i]')
 )
 set(
  name 'Set element'
  type 'typeop'
  in('x' 'i' 'e')
  out('x: x[i] = e')
  model 'set'
 )
)
