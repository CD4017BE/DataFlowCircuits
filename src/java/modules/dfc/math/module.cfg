modules()
blocks(
 strToUint(
  type 'func'
  model 'str2int'
  name 'parse unsigned int'
  out('int')
  in('string')
 )
 uintToStr(
  type 'func'
  model 'int2str'
  name 'unsigned int to string'
  out('string')
  in('int')
 )
 udiv(
  type 'func'
  model 'div'
  name 'divide unsigned'
  out('quot')
  in('a' 'b')
 )
 umod(
  type 'func'
  model 'mod'
  name 'modulo unsigned'
  out('mod')
  in('a' 'b')
 )
 ushr(
  type 'func'
  model 'shr'
  name 'shift bits right unsigned'
  out('shift')
  in('a' 'b')
 )
 ucomp(
  type 'func'
  model 'comp'
  name 'compare unsigned integers'
  out('comp')
  in('a' 'b')
 )
 strToFloat(
  type 'func'
  model 'str2float'
  name 'parse float'
  out('float')
  in('string')
 )
 floatToStr(
  type 'func'
  model 'float2str'
  name 'float to string'
  out('string')
  in('float')
 )
 intToFloat(
  type 'func'
  model 'int2float'
  name 'integer to float'
  out('float')
  in('int')
 )
 floatToInt(
  type 'func'
  model 'float2int'
  name 'float to integer'
  out('int')
  in('float')
 )
 fadd(
  type 'func'
  model 'add'
  name 'add floats'
  out('sum')
  in('a' 'b')
 )
 fsub(
  type 'func'
  model 'sub'
  name 'subtract floats'
  out('dif')
  in('a' 'b')
 )
 fmul(
  type 'func'
  model 'mul'
  name 'multiply floats'
  out('prod')
  in('a' 'b')
 )
 fdiv(
  type 'func'
  model 'div'
  name 'divide floats'
  out('quot')
  in('a' 'b')
 )
 fmod(
  type 'func'
  model 'mod'
  name 'modulo floats'
  out('mod')
  in('a' 'b')
 )
 fcomp(
  type 'func'
  model 'comp'
  name 'compare floats'
  out('comp')
  in('a' 'b')
 )
)
types(
 float(
  color(8 8)
  ops()
 )
)
signals()